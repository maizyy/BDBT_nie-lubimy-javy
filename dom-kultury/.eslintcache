[{"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/index.js":"1","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/reportWebVitals.js":"2","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/App.js":"3","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/BasicPage.js":"4","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Navbar.js":"5","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/Context.js":"6","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Events.js":"7","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Lessons.js":"8","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Exhibitions.js":"9","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Home.js":"10","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/MyProfile.js":"11","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Register.js":"12","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Employees.js":"13","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Login.js":"14","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Participants.js":"15","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/AdminProfile.js":"16","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/DeveloperProfile.js":"17","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/OrganizatorProfile.js":"18","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/helpers/LoginInput.js":"19","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/helpers/ChangePopup.js":"20","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/helpers/AddEvent.js":"21","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/ParticipantProfile.js":"22"},{"size":500,"mtime":1609880214384,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1609880214387,"results":"25","hashOfConfig":"24"},{"size":779,"mtime":1610205574754,"results":"26","hashOfConfig":"24"},{"size":1088,"mtime":1609880338462,"results":"27","hashOfConfig":"24"},{"size":2161,"mtime":1610922714034,"results":"28","hashOfConfig":"24"},{"size":124,"mtime":1610205574755,"results":"29","hashOfConfig":"24"},{"size":3154,"mtime":1610800566908,"results":"30","hashOfConfig":"24"},{"size":6358,"mtime":1610924225633,"results":"31","hashOfConfig":"24"},{"size":6683,"mtime":1610924114888,"results":"32","hashOfConfig":"24"},{"size":2201,"mtime":1609880338474,"results":"33","hashOfConfig":"24"},{"size":1053,"mtime":1610831043580,"results":"34","hashOfConfig":"24"},{"size":2454,"mtime":1610928064578,"results":"35","hashOfConfig":"24"},{"size":4764,"mtime":1610783410011,"results":"36","hashOfConfig":"24"},{"size":4470,"mtime":1610832118085,"results":"37","hashOfConfig":"24"},{"size":8483,"mtime":1610924077789,"results":"38","hashOfConfig":"24"},{"size":2092,"mtime":1610792429533,"results":"39","hashOfConfig":"24"},{"size":2249,"mtime":1610786711649,"results":"40","hashOfConfig":"24"},{"size":2102,"mtime":1610795937732,"results":"41","hashOfConfig":"24"},{"size":471,"mtime":1609880338482,"results":"42","hashOfConfig":"24"},{"size":10525,"mtime":1610926133209,"results":"43","hashOfConfig":"24"},{"size":9074,"mtime":1610927317746,"results":"44","hashOfConfig":"24"},{"size":6209,"mtime":1610924019238,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1raqkty",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/index.js",[],["102","103"],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/reportWebVitals.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/App.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/BasicPage.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Navbar.js",["104"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { GeneralData } from \"../Context\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../styles/Navbar.css\";\n\nfunction Navbar() {\n  const { userData, setUserData } = useContext(GeneralData);\n  const [userType, setUserType] = useState(null);\n  const [isLoggedOut, setLoggedOut] = useState(false);\n  const history = useHistory();\n  const logout = () => {\n    setUserData({});\n    setLoggedOut(true);\n  };\n\n    useEffect(()=>{\n    if ((userData.stanowisko)||(isLoggedOut)){\n      setUserType(userData.stanowisko);\n    }\n  }, [userData]);\n\n  return (\n    <nav className=\"nav\">\n      <Link to=\"/\" className=\"logo\">\n        <i className=\"las la-university\"></i>\n        <div className=\"logo-text\">\n          <span>Warszwskie</span>\n          <span>Domy</span>\n          <span>Kultury</span>\n          <span>FLEX</span>\n        </div>\n      </Link>\n      <div className=\"links\">\n        <Link to=\"/\">Główna</Link>\n        {/* <Link to=\"/events\">Wydarzenia</Link> */}\n        <Link to=\"/exhibitions\">Wystawy</Link>\n        <Link to=\"/lessons\">Warsztaty</Link>\n        {userType === \"Developer\" ||\n        userType === \"Organizator\" ? (\n          <Link to=\"/participants\">Zarządzanie</Link>\n        ) : (\n          <></>\n        )}\n        {userType === \"Developer\" ? (\n          <Link to=\"/employees\">Pracownicy</Link>\n        ) : (\n          <></>\n        )}\n        {userType? (\n          <Link to=\"/myprofile\">Moj profil</Link>\n        ) : (\n          <></>\n        )}\n      </div>\n      <div className=\"user\">\n        {!userData.imie ? (\n          <Link className=\"login-as\" to=\"/login\">\n            Zaloguj się\n          </Link>\n        ) : (\n          <></>\n        )}\n\n        {userData.imie ? (\n          <span className=\"login-name\" onClick={() => history.push(\"/\")}>\n            Witaj, {userData.imie}!\n          </span>\n        ) : (\n          <></>\n        )}\n        {userData.imie ? (\n          <Link to=\"/\">\n            <span onClick={logout}>Exit</span>\n          </Link>\n        ) : (\n          <></>\n        )}\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/Context.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Events.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Lessons.js",["105"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { GeneralData } from \"../Context\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"../styles/Events.css\";\nimport \"../styles/Exhibitions.css\";\n\nfunction Lessons() {\n  const { userData } = useContext(GeneralData);\n  const [selectedDomKultury, setSelectedDomKultury] = useState(1);\n  const [domyKultury, setDomyKultury] = useState([]);\n  const [warsztaty, setWarsztaty] = useState([]);\n  const [isWarsztatyChanged, setWarsztatyChanged] = useState(false);\n  const [warsztatyOfParticipant, setWarsztatyOfParticipant] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\"/api/domy_kultury/\");\n      setDomyKultury(result.data);\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if ((userData.stanowisko === \"Uczestnik\") && (isWarsztatyChanged)) {\n      async function fetchData() {\n        const result = await axios(\"/api/wydarzenia_uczestnika/\" + userData.id);\n        setWarsztatyOfParticipant(result.data);\n        console.log(result.data);\n      }\n      fetchData();\n      setWarsztatyChanged(false);\n    }\n  }, [isWarsztatyChanged]);\n\n  useEffect(() => {\n    async function fetchData() {\n      let result = [];\n      let resultWydarzenia = await axios(\n        \"/api/wydarzenia?dom_kultury=\" + selectedDomKultury\n      );\n      resultWydarzenia = resultWydarzenia.data.map(\n        (wydarzenie) => wydarzenie.id\n      );\n      const resultWarsztaty = await axios(\"/api/warsztaty\");\n      Promise.all([resultWarsztaty]).then(()=>{\n        let newResultWarsztaty = resultWarsztaty.data.filter(\n          (wystawa) => resultWydarzenia.indexOf(wystawa.id) !== -1\n        );\n        console.log(newResultWarsztaty);\n        newResultWarsztaty.forEach((obj) => {\n          if (result.map((o) => o.id ).indexOf(obj.id)===-1) result.push(obj);\n        });\n        setWarsztaty(result);\n      })\n    }\n    fetchData();\n  }, [selectedDomKultury]);\n\n  return (\n    <div className=\"box\">\n      <div className=\"container\">\n        <div className=\"container-left\">\n          <h2>Wybierz Dom Kultury:</h2>\n          <select\n            name=\"domKultury\"\n            onChange={(event) =>\n              setSelectedDomKultury(parseInt(event.target.value))\n            }\n          >\n            {domyKultury.map((element, index) => (\n              <option value={element.id}>Dom Kultury numer {element.id}</option>\n            ))}\n          </select>\n          <DomKultury domKultury={domyKultury[selectedDomKultury - 1]} />\n        </div>\n        <div className=\"container-right\">\n          <h2>Warsztaty w domie Kultury numer {selectedDomKultury}:</h2>\n          <div className=\"wystawy\">\n            {warsztaty.length !== 0 ? (\n              warsztaty.map((element, index) => (\n                <Warsztat\n                  uczestnik={userData.stanowisko === \"Uczestnik\"}\n                  id={userData.id}\n                  key={index}\n                  index={index}\n                  setWarsztatyChanged={setWarsztatyChanged}\n                  warsztatyOfParticipant={warsztatyOfParticipant}\n                  warsztat={element}\n                />\n              ))\n            ) : (\n              <h4>Niestety nie znalezlismy zadnych warsztatow</h4>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction DomKultury({ domKultury }) {\n  return (\n    <div>\n      <h5>{domKultury ? \"City: \" + domKultury.city : \"\"}</h5>\n      <h5>\n        {domKultury\n          ? \"Street: \" + domKultury.street + \"/\" + domKultury.apartment\n          : \"\"}\n      </h5>\n      <h5>{domKultury ? \"Postal code: \" + domKultury.postal_code : \"\"}</h5>\n      <h5>{domKultury ? \"Phone: \" + domKultury.phone : \"\"}</h5>\n      <h5>{domKultury ? \"Opens: \" + domKultury.opens.slice(11, 16) : \"\"}</h5>\n      <h5>{domKultury ? \"Closes: \" + domKultury.closes.slice(11, 16) : \"\"}</h5>\n    </div>\n  );\n}\n\nfunction Warsztat({\n  warsztat,\n  uczestnik,\n  id,\n  warsztatyOfParticipant,\n  setWarsztatyChanged,\n}) {\n  let data = moment.utc(warsztat.data).local(\"pl\").format(\"LL\");\n  let godzina = moment.utc(warsztat.data).format(\"HH:mm\");\n\n  const sign = async () => {\n    console.log(\"sign\");\n    const url = \"/api/wydarzenia_uczestnika\";\n    const params = {\n      id_uczestnika: parseInt(id),\n      id_wydarzenia: parseInt(warsztat.id),\n    };\n    console.log(params);\n    await axios.post(url, params);\n    setWarsztatyChanged(true);\n  };\n\n  const unsign = async () => {\n    console.log(\"unsign\");\n    const url = \"/api/wydarzenia_uczestnika\";\n    const params = {\n      id_uczestnika: id,\n      id_wydarzenia: warsztat.id,\n    };\n    console.log(params);\n    await axios.delete(url, { data: Object.assign({}, params), headers: {\"Content-Type\": \"application/json\"} });\n    setWarsztatyChanged(true);\n  };\n\n  return (\n    <div className=\"wystawa\">\n      <div>\n        <h2>{warsztat ? warsztat.temat : \"\"}</h2>\n        {uczestnik ? (\n          warsztatyOfParticipant.findIndex((wys) => wys.id === warsztat.id) ===\n          -1 ? (\n            <div className=\"buttons-wystawa\">\n              <button\n                className=\"popup_submit classic_button_style\"\n                onClick={sign}\n              >\n                Zapisz się\n              </button>\n            </div>\n          ) : (\n            <div className=\"buttons-wystawa\">\n              <button\n                className=\"popup_submit classic_button_style red\"\n                onClick={unsign}\n              >\n                Wypisz się\n              </button>\n            </div>\n          )\n        ) : (\n          <></>\n        )}\n      </div>\n      <div>\n        <h5>\n          {warsztat\n            ? \"Wykladowca: \" +\n              warsztat.imie_wykladowcy +\n              \" \" +\n              warsztat.nazwisko_wykladowcy\n            : \"\"}\n        </h5>\n        <p className=\"sala\">{`Numer sali: ${warsztat.numer_sali}`}</p>\n        <div className=\"date\">\n          <p>{data ? data : \"\"}</p>\n          <p>{godzina ? godzina+\" - \"+((parseInt(godzina.toString().substring(0,2))+warsztat.czas_trwania)>23 ? (parseInt(godzina.toString().substring(0,2))+warsztat.czas_trwania) - 24 : (parseInt(godzina.toString().substring(0,2))+warsztat.czas_trwania) )+godzina.toString().substring(2,5) : \"\"}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Lessons;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Exhibitions.js",["106"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { GeneralData } from \"../Context\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"../styles/Events.css\";\nimport \"../styles/Exhibitions.css\";\n\nfunction Exhibitions() {\n  const { userData } = useContext(GeneralData);\n  const [selectedDomKultury, setSelectedDomKultury] = useState(1);\n  const [domyKultury, setDomyKultury] = useState([]);\n  const [wystawy, setWystawy] = useState([]);\n  const [isWystawyChanged, setWystawyChanged] = useState(true);\n  const [wystawyOfParticipant, setWystawyOfParticipant] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\"/api/domy_kultury/\");\n      setDomyKultury(result.data);\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if ((userData.stanowisko === \"Uczestnik\")&&(isWystawyChanged)) {\n      async function fetchData() {\n        const result = await axios(\"/api/wydarzenia_uczestnika/\" + userData.id);\n        setWystawyOfParticipant(result.data);\n      }\n      fetchData();\n      setWystawyChanged(false);\n    }\n  }, [isWystawyChanged]);\n\n  useEffect(() => {\n    async function fetchData() {\n      let result = [];\n      let resultWydarzenia = await axios(\n        \"/api/wydarzenia?dom_kultury=\" + selectedDomKultury\n      );\n      resultWydarzenia = resultWydarzenia.data.map(\n        (wydarzenie) => wydarzenie.id\n      );\n      const resultWystawy = await axios(\"/api/wystawy\");\n      Promise.all([resultWystawy]).then(()=>{\n        let newResultWystawy = resultWystawy.data.filter(\n          (wystawa) => resultWydarzenia.indexOf(wystawa.id) !== -1\n        );\n        console.log(newResultWystawy);\n        newResultWystawy.forEach((obj) => {\n          if (result.map((o) => o.id ).indexOf(obj.id)===-1) result.push(obj);\n        });\n        setWystawy(result);\n      })\n    }\n    fetchData();\n  }, [selectedDomKultury]);\n\n  return (\n    <div className=\"box\">\n      <div className=\"container\">\n        <div className=\"container-left\">\n          <h2>Wybierz Dom Kultury:</h2>\n          <select\n            name=\"domKultury\"\n            onChange={(event) =>\n              setSelectedDomKultury(parseInt(event.target.value))\n            }\n          >\n            {domyKultury.map((element, index) => (\n              <option value={element.id}>Dom Kultury numer {element.id}</option>\n            ))}\n          </select>\n          <DomKultury domKultury={domyKultury[selectedDomKultury - 1]} />\n        </div>\n        <div className=\"container-right\">\n          <h2>Wystawy w domie Kultury numer {selectedDomKultury}:</h2>\n          <div className=\"wystawy\">\n            {wystawy.length !== 0 ? (\n              wystawy.map((element, index) => (\n                <Wystawa\n                  uczestnik={userData.stanowisko === \"Uczestnik\"}\n                  id = {userData.id}\n                  key={index}\n                  index={index}\n                  wystawa={element}\n                  setWystawyChanged={setWystawyChanged}\n                  isWystawyChanged={isWystawyChanged}\n                  wystawyOfParticipant = {wystawyOfParticipant}\n                />\n              ))\n            ) : (\n              <h4>Niestety nie znalezlismy zadnych wystaw</h4>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction DomKultury({ domKultury }) {\n  return (\n    <div>\n      <h5>{domKultury ? \"City: \" + domKultury.city : \"\"}</h5>\n      <h5>\n        {domKultury\n          ? \"Street: \" + domKultury.street + \"/\" + domKultury.apartment\n          : \"\"}\n      </h5>\n      <h5>{domKultury ? \"Postal code: \" + domKultury.postal_code : \"\"}</h5>\n      <h5>{domKultury ? \"Phone: \" + domKultury.phone : \"\"}</h5>\n      <h5>{domKultury ? \"Opens: \" + domKultury.opens.slice(11, 16) : \"\"}</h5>\n      <h5>{domKultury ? \"Closes: \" + domKultury.closes.slice(11, 16) : \"\"}</h5>\n    </div>\n  );\n}\n\nfunction Wystawa({ wystawa, uczestnik, id, wystawyOfParticipant, setWystawyChanged, isWystawyChanged}) {\n  const [open, setOpen] = useState(false);\n  let data = moment.utc(wystawa.data).local(\"pl\").format(\"LL\");\n  let godzina = moment.utc(wystawa.data).format(\"HH:mm\");\n\n  const sign = async () => {\n    const url = \"/api/wydarzenia_uczestnika\"\n    const params = { \n      id_uczestnika: parseInt(id), \n      id_wydarzenia: parseInt(wystawa.id)\n    };\n    try {\n      await axios.post(url, params);\n      setWystawyChanged(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const unsign = async () => {\n    const url = \"/api/wydarzenia_uczestnika\"\n    const params = { \n      id_uczestnika: parseInt(id), \n      id_wydarzenia: parseInt(wystawa.id)\n    };\n    try {\n      await axios.delete(url, { data: Object.assign({}, params), headers: {\"Content-Type\": \"application/json\"} });\n      setWystawyChanged(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"wystawa\">\n      <div>\n        <h2>{wystawa ? wystawa.temat : \"\"}</h2>\n        {uczestnik ? \n          ((wystawyOfParticipant.findIndex(wys => wys.id === wystawa.id))===-1) ?\n          <div className=\"buttons-wystawa\">\n            <button\n              className=\"popup_submit classic_button_style\"\n              onClick={sign}\n            >\n              Zapisz się\n            </button>\n          </div>\n            :\n            <div className=\"buttons-wystawa\">\n            <button\n              className=\"popup_submit classic_button_style red\"\n              onClick={unsign}\n            >\n              Wypisz się\n            </button>\n            </div>\n        : (\n          <></>\n        )}\n      </div>\n      <div>\n        <h5>Wystawa {wystawa ? wystawa.typ_wystawy : \"\"}</h5>\n        <h5>\n          {wystawa\n            ? wystawa.imie_wystawiajacego +\n              \" \" +\n              wystawa.nazwisko_wystawiajacego\n            : \"\"}\n        </h5>\n        <p className=\"sala\">{`Numer sali: ${wystawa.numer_sali}`}</p>\n        <div className=\"date\">\n          <p>{data}</p>\n          <p>{godzina+\" - \"+((parseInt(godzina.toString().substring(0,2))+wystawa.czas_trwania)>23 ? (parseInt(godzina.toString().substring(0,2))+wystawa.czas_trwania) - 24 : (parseInt(godzina.toString().substring(0,2))+wystawa.czas_trwania) )+godzina.toString().substring(2,5)}</p>\n        </div>\n      </div>\n      {open ? (\n        <div>\n          <h5>Opis:</h5>\n          <p>{wystawa.opis}</p>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {open ? (\n        <i className=\"las la-angle-up\" onClick={() => setOpen(false)}></i>\n      ) : (\n        <i className=\"las la-angle-down\" onClick={() => setOpen(true)}></i>\n      )}\n    </div>\n  );\n}\n\nexport default Exhibitions;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Home.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/MyProfile.js",["107"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { GeneralData } from \"../Context\";\nimport DeveloperProfile from \"./DeveloperProfile\";\nimport OrganizatorProfile from \"./OrganizatorProfile\";\nimport ParticipantProfile from \"./ParticipantProfile\";\nimport AdminProfile from \"./AdminProfile\";\nimport \"../styles/MyProfile.css\";\n\nfunction MyProfile() {\n  const { userData, setUserData } = useContext(GeneralData);\n  const [userType, setUserType] = useState('');\n\n  useEffect(()=>{\n    if (userData.stanowisko){\n      setUserType(userData.stanowisko);\n    }\n  }, [userData]);\n\n  const serveMyProfile = (usertype) => {\n    switch (usertype) {\n      case \"Developer\":\n        return <DeveloperProfile />;\n\n      case \"Organizator\":\n        return <OrganizatorProfile />;\n\n      case \"Administrator\":\n        return <AdminProfile />;\n\n      case \"Uczestnik\":\n        return <ParticipantProfile />;\n\n      default:\n        return <h1>Essa, nie ma hakowanka XD </h1>;\n    }\n  };\n\n  return serveMyProfile(userType);\n}\n\nexport default MyProfile;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Register.js",["108","109","110"],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Employees.js",["111"],"import React, { useState, useEffect, useContext } from \"react\";\n//import { GeneralData } from \"../Context\";\nimport axios from \"axios\";\nimport \"../styles/Events.css\";\nimport moment from \"moment\";\nimport ChangePopup from \"../helpers/ChangePopup\";\nimport { Refetch } from \"../Context\";\n\nfunction Employees() {\n  //const { userData } = useContext(GeneralData);\n  const [selectedDomKultury, setSelectedDomKultury] = useState(1);\n  const [domyKultury, setDomyKultury] = useState([]);\n  const [pracownicy, setPracownicy] = useState([]);\n  const { refetch, setRefetch } = useContext(Refetch);\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\"/api/domy_kultury/\");\n      setDomyKultury(result.data);\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\n        \"/api/pracownicy?dom_kultury=\" + selectedDomKultury\n      );\n      setPracownicy(result.data);\n    }\n    fetchData();\n    console.log(\"refetch\");\n  }, [selectedDomKultury, refetch]);\n\n  const serveWorkerList = (workersList, workerPosition) => {\n    let workers = workersList.filter((worker) => {\n      return worker.stanowisko === workerPosition;\n    });\n    return workers.map((element, index) => {\n      return <Pracownik pracownik={element} key={index} index={index} />;\n    });\n  };\n\n  return (\n    <div className=\"box\">\n      <div className=\"container\">\n        <div className=\"container-left\">\n          <h2>Wybierz Dom Kultury:</h2>\n          <select\n            name=\"domKultury\"\n            onChange={(event) =>\n              setSelectedDomKultury(parseInt(event.target.value))\n            }\n          >\n            {domyKultury.map((element, index) => (\n              <option key={index} value={element.id}>\n                Dom Kultury numer {element.id}\n              </option>\n            ))}\n          </select>\n          <DomKultury domKultury={domyKultury[selectedDomKultury - 1]} />\n        </div>\n        <div className=\"container-right\">\n          <h2>Pracownicy w domie Kultury numer {selectedDomKultury}:</h2>\n          {/* <button className=\"classic_button_style\">Dodaj Pracownika</button> */}\n          <div className=\"workers_group\">\n            {pracownicy.length !== 0 ? (\n              <>\n                <div className=\"workers_wrapper\">\n                  <h3>Developerzy:</h3>\n                  <div className=\"participant_group\">\n                    {serveWorkerList(pracownicy, \"Developer\")}\n                  </div>\n                </div>\n                <div className=\"workers_wrapper\">\n                  <h3>Organizatorzy:</h3>\n                  {serveWorkerList(pracownicy, \"Organizator\")}\n                </div>\n                <div className=\"workers_wrapper\">\n                  <h3>Developerzy:</h3>\n                  {serveWorkerList(pracownicy, \"Administrator\")}\n                </div>\n              </>\n            ) : (\n              <h4>Niestety nie znalezlismy zadnych pracownikow</h4>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction DomKultury({ domKultury }) {\n  return (\n    <div>\n      <h5>{domKultury ? \"City: \" + domKultury.city : \"\"}</h5>\n      <h5>\n        {domKultury\n          ? \"Street: \" + domKultury.street + \"/\" + domKultury.apartment\n          : \"\"}\n      </h5>\n      <h5>{domKultury ? \"Postal code: \" + domKultury.postal_code : \"\"}</h5>\n      <h5>{domKultury ? \"Phone: \" + domKultury.phone : \"\"}</h5>\n      <h5>{domKultury ? \"Opens: \" + domKultury.opens.slice(11, 16) : \"\"}</h5>\n      <h5>{domKultury ? \"Closes: \" + domKultury.closes.slice(11, 16) : \"\"}</h5>\n    </div>\n  );\n}\n\nfunction Pracownik({ pracownik }) {\n  const dataUr = moment.utc(pracownik.data_urodzenia).format(\"L\");\n  const [tooglePopup, setTooglePopup] = useState(false);\n  return (\n    <div className=\"worker\">\n      <p>\n        {pracownik ? pracownik.imie : \"\"}\n        {pracownik ? \" \" + pracownik.nazwisko : \"\"}\n      </p>\n      <p>\n        {pracownik\n          ? \"Plec: \" + (pracownik.plec === \"K\" ? \"Kobieta\" : \"Mężczyzna\")\n          : \"\"}\n      </p>\n      <p>{pracownik ? \"Data ur.: \" + dataUr : \"\"}</p>\n      <p>{pracownik ? \"Pesel: \" + pracownik.pesel : \"Nima\"}</p>\n      <p>{pracownik ? \"Telefon: \" + pracownik.telefon : \"\"}</p>\n      <p>{pracownik ? \"Pensja: \" + pracownik.pensja : \"\"}</p>\n      <button\n        className=\"classic_button_style\"\n        onClick={() => {\n          setTooglePopup(true);\n        }}\n      >\n        Zmień dane\n      </button>\n      {tooglePopup && (\n        <ChangePopup\n          typ=\"pracownik\"\n          data={pracownik}\n          popupHandler={() => setTooglePopup(false)}\n          url={`/api/pracownicy?id=${pracownik.id}`}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Employees;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Login.js",["112","113","114","115"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { GeneralData } from \"../Context\";\nimport \"../styles/Login.css\";\nimport LoginInput from \"../helpers/LoginInput\";\nimport axios from \"axios\";\n\nfunction Login() {\n  const { setUserData } = useContext(GeneralData);\n  const history = useHistory();\n\n  //form states\n  const [userType, setUserType] = useState(\"\");\n  const [employeeForm, setEmployeeForm] = useState({});\n  const [participantForm, setParticipantForm] = useState({});\n  const [errorHere, setErrorHere] = useState(true);\n\n  const [userInfo, setUserInfo] = useState({});\n\n  useEffect(() => {\n    setUserData(userInfo);\n    if (Object.keys(userInfo).length!==0){\n      history.push(\"/\");\n    }\n  }, [userInfo]);\n\n  const login = async (e) => {\n    e.preventDefault();\n    // axios i endpoint z logowaniem\n    const o = {\n      imie: \"Sofiia\",\n      nazwisko: \"Levchenko\",\n      haslo: \"hardpass36\",\n    };\n    const o2 = {\n      email: \"kzyn@email.com\",\n      haslo: \"litepass1\",\n    };\n    if (!userType) return;\n    if (userType === \"pracownik\") {\n      try {\n        const res = await axios.post(\"/api/login_pracownicy\", o);\n        setUserInfo(res.data[0]);\n        setErrorHere(false);\n      } catch (error) {\n        console.log(error);\n        window.alert('Nieprawidłowe dane! Spróbuj ponownie!');\n      }\n    }\n    if (userType === \"uczestnik\") {\n      try {\n        const res = await axios.post(\"/api/login_uczestnicy\", o2);\n        setUserInfo({ ...res.data[0], stanowisko: \"Uczestnik\" });\n        setErrorHere(false);\n      } catch (error) {\n        console.log(error);\n        window.alert('Nieprawidłowe dane! Spróbuj ponownie!')\n      }\n    }\n  };\n  const change = (e, setter) => {\n    let { name, value } = e.target;\n    setter((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Logowanie</h1>\n      <h3>Zaloguj sie jako:</h3>\n      <form onSubmit={login}>\n        <div className=\"user-type-radios\">\n          <label className=\"radio_button\">\n            <input\n              name=\"pracownik\"\n              type=\"radio\"\n              value=\"pracownik\"\n              checked={userType === \"pracownik\"}\n              onChange={(e) => {\n                setUserType(e.target.value);\n                setParticipantForm({});\n              }}\n            />\n            <span className=\"checkmark\"></span>\n            Pracownik\n          </label>\n          <label className=\"radio_button\">\n            <input\n              name=\"uczestnik\"\n              type=\"radio\"\n              value=\"uczestnik\"\n              checked={userType === \"uczestnik\"}\n              onChange={(e) => {\n                setUserType(e.target.value);\n                setEmployeeForm({});\n              }}\n            />\n            <span className=\"checkmark\"></span>\n            Uczestnik\n          </label>\n        </div>\n        {userType === \"pracownik\" ? (\n          <div className=\"form-group\">\n            <LoginInput\n              text=\"Imię\"\n              type=\"text\"\n              name=\"imie\"\n              setter={(e) => change(e, setEmployeeForm)}\n            />\n            <LoginInput\n              text=\"Nazwisko\"\n              type=\"text\"\n              name=\"nazwisko\"\n              setter={(e) => change(e, setEmployeeForm)}\n            />\n            <LoginInput\n              text=\"Hasło\"\n              type=\"password\"\n              name=\"haslo\"\n              setter={(e) => change(e, setEmployeeForm)}\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n        {userType === \"uczestnik\" ? (\n          <div className=\"form-group\">\n            <LoginInput\n              text=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              setter={(e) => change(e, setParticipantForm)}\n            />\n            <LoginInput\n              text=\"Hasło\"\n              type=\"password\"\n              name=\"haslo\"\n              setter={(e) => change(e, setParticipantForm)}\n            />\n            <small>\n              Nie masz konta uczestnika{\" \"}\n              <Link to=\"/register\">Zarejestruj się</Link>\n            </small>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {userType && (\n          <button className=\"submit-button\" type=\"submit\">\n            Zaloguj się\n          </button>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Participants.js",["116","117","118","119","120","121","122","123","124","125"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { GeneralData } from \"../Context\";\nimport { Refetch } from \"../Context\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Loader from \"react-loader-spinner\";\nimport localization from \"moment/locale/pl\";\nimport \"../styles/Events.css\";\nimport ChangePopup from \"../helpers/ChangePopup\";\nimport AddEvent from \"../helpers/AddEvent\";\n\nmoment.updateLocale(\"pl\", localization);\n\nfunction Participants() {\n  const { userData } = useContext(GeneralData);\n  const { refetch, setRefetch } = useContext(Refetch);\n  // const [selectedDomKultury, setSelectedDomKultury] = useState(1);\n  const [domyKultury, setDomyKultury] = useState([]);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [allInfo, setAllInfo] = useState({});\n  const [handleAdding, setHandleAdding] = useState(false);\n\n  const serveParticipants = async ({ stanowisko }) => {\n    let res = {\n      wystawa: [],\n      warsztat: [],\n    };\n    const { data: wydarzeniaR } = await axios(\"/api/wydarzenia\");\n    const { data: wystawyR } = await axios(\"/api/wystawy\");\n    const { data: warsztatyR } = await axios(\"/api/warsztaty\");\n    const all = [...wystawyR, ...warsztatyR];\n    const { data: organizatorzy } = await axios(\"/api/organizacja_wydarzen\");\n    const or = {};\n\n    let organizatorWydarzenia = all.map((el, index) => {\n      return organizatorzy.filter((ev) => {\n        return ev.id_wydarzenia === el.id;\n      });\n    });\n\n    organizatorWydarzenia.map((org) => {\n      if (org.length === 0) {\n        return;\n      } else {\n        org.map((el) => {\n          let {\n            czas_trwania,\n            data_wydarzenia,\n            numer_sali,\n            powierzchnia_sali,\n            id_sali,\n            id_wydarzenia,\n            typ_wydarzenia,\n            ...rest\n          } = el;\n          if (or[el.id_wydarzenia] === undefined) {\n            or[el.id_wydarzenia] = [];\n          }\n          or[el.id_wydarzenia].push(rest);\n        });\n      }\n    });\n\n    console.log(or);\n\n    await Promise.all(\n      wydarzeniaR.map(async (event) => {\n        let organizatorzy = [];\n        for (const key in or) {\n          if (event.id === parseInt(key)) {\n            organizatorzy = or[key];\n          }\n        }\n\n        let match = all.find((element) => element.id === event.id);\n\n        const { data: uczestnicyLista } = await axios(\n          `/api/uczestnicy?wydarzenie=${event.id}`\n        );\n        let final = { ...event, ...match, uczestnicyLista, organizatorzy };\n        // console.log(final);\n        res[event.typ].push(final);\n      })\n    )\n    if (userData.stanowisko === \"Organizator\") {\n      // console.log(userData.id);\n      Object.entries(res).map(([key, vals]) => {\n        // console.log({ vals });\n        const filtred = vals.filter((el) => {\n          if (el.organizatorzy.length !== 0) {\n            return el.organizatorzy.filter((org) => {\n              return org.id_pracownika === userData.id;\n            });\n          } else {\n            return;\n          }\n        });\n        console.log(key, filtred);\n        res[key] = filtred;\n      });\n    }\n    return res;\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\"/api/domy_kultury/\");\n      setDomyKultury(result.data);\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    async function serve() {\n      const info = await serveParticipants(userData);\n      setAllInfo(info);\n      setDataLoaded(true);\n    }\n    serve();\n    console.log(\"fetching for new data\");\n  }, [refetch]);\n\n  return (\n    <div className=\"box\">\n      <div className=\"wrapper\">\n        <h2>Uczestnicy wydarzen:</h2>\n        {userData.stanowisko === \"Developer\" ||\n        userData.stanowisko === \"Administrator\" ? (\n          <button\n            className=\"classic_button_style\"\n            onClick={() => setHandleAdding(true)}\n          >\n            Dodaj wydarzenie\n          </button>\n        ) : (\n          <></>\n        )}\n        {handleAdding && (\n          <AddEvent handleActive={() => setHandleAdding(false)} />\n        )}\n        <div className=\"wydarzenia\">\n          {dataLoaded ? (\n            Object.entries(allInfo).map(([key, events], i) => (\n              <div className=\"event_group\" key={i}>\n                <h4>{`Rodzaj: ${key}`} </h4>\n                <ul>\n                  {events.map((event, i) => {\n                    return <WydarzanieCard event={event} key={event.id} userData={userData} />;\n                  })}\n                </ul>\n              </div>\n            ))\n          ) : (\n            <div className=\"loader\">\n              <Loader type=\"ThreeDots\" color=\"#2196f3\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Uczestnik({ uczestnik, id, userData }) {\n  const { refetch, setRefetch } = useContext(Refetch);\n  const deleteParticipant = async () =>{\n    const url = \"/api/wydarzenia_uczestnika\"\n    const params = { \n      id_uczestnika: uczestnik.id, \n      id_wydarzenia: id\n    }\n    console.log(params);\n    try {\n      await axios.delete(url, { data: Object.assign({}, params), headers: {\"Content-Type\": \"application/json\"} });\n      setRefetch(!refetch);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"participant\">\n      <p>\n        {uczestnik ? uczestnik.imie : \"\"}\n        {uczestnik ? ` ${uczestnik.nazwisko}` : \"\"}\n      </p>\n      <p>{uczestnik ? \"Tel: \" + uczestnik.telefon : \"\"}</p>\n      <p>{uczestnik ? \"Email: \" + uczestnik.email : \"\"}</p>\n      { (userData.stanowisko === \"Developer\")||(userData.stanowisko === \"Administrator\") ?\n        <i className=\"las la-trash\" style={{'color': 'red'}} onClick={deleteParticipant}></i>\n        : <></>\n      }\n    </div>\n  );\n}\nconst change = (e, setter) => {\n  let { name, value } = e.target;\n  if (name === \"data_urodzenia\" || name === \"data\") {\n    setter((prevState) => ({\n      ...prevState,\n      [name]: moment.utc(value).toISOString(),\n    }));\n  } else {\n    setter((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  }\n};\n\nfunction WydarzanieCard({ event, userData }) {\n  const serveUrl = () => {\n    switch (event.typ) {\n      case \"wystawa\":\n        return `/api/wystawy?id=${event.id}`;\n      case \"warsztat\":\n        return `/api/warsztaty?id=${event.id}`;  \n      default:\n        return \"\";\n    }\n  };\n  const [open, setOpen] = useState(false);\n  let data = moment.utc(event.data).local(\"pl\").format(\"LL\");\n  let godzina = moment.utc(event.data).format(\"HH:mm\");\n\n  const [haveP, setHaveP] = useState(event.uczestnicyLista.length !== 0);\n  const [tooglePopup, setTooglePopup] = useState(false);\n  return (\n    <div className=\"event\">\n      {console.log()}\n      <div className=\"basic_info\">\n        <div className=\"info\">\n          <h3>{event ? event.temat : \"\"}</h3>\n          <p>\n            {event.imie_wystawiajacego\n              ? `${event.imie_wystawiajacego} ${event.nazwisko_wystawiajacego}`\n              : `${event.imie_wykladowcy} ${event.nazwisko_wykladowcy}`}\n          </p>\n          <p className=\"sala\">{`Numer sali: ${event.numer_sali}`}</p>\n        </div>\n\n        <div className=\"date\">\n          <p>{data}</p>\n          <p>{godzina+\" - \"+((parseInt(godzina.toString().substring(0,2))+event.czas_trwania)>23 ? (parseInt(godzina.toString().substring(0,2))+event.czas_trwania) - 24 : (parseInt(godzina.toString().substring(0,2))+event.czas_trwania) )+godzina.toString().substring(2,5)}</p>\n          <button\n            onClick={() => setTooglePopup(true)}\n            className=\"classic_button_style\"\n          >\n            Zmień dane\n          </button>\n        </div>\n      </div>\n\n      <div className=\"participant_group\">\n        {open\n          ? haveP\n            ? event.uczestnicyLista.map((element) => {\n                console.log(element);\n                return <Uczestnik uczestnik={element} id={event.id} userData={userData} />;\n              })\n            : \"nie jeszcze ma uczestników\"\n          : \"\"}\n      </div>\n      {open ? (\n        <i className=\"las la-angle-up\" onClick={() => setOpen(false)}></i>\n      ) : (\n        <i className=\"las la-angle-down\" onClick={() => setOpen(true)}></i>\n      )}\n      {tooglePopup && (\n        <ChangePopup\n          data={event}\n          popupHandler={() => setTooglePopup(false)}\n          url={serveUrl()}\n          typ={event.typ}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Participants;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/AdminProfile.js",["126"],"import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GeneralData } from \"../Context\";\nimport moment from \"moment\";\nimport ChangePopup from \"../helpers/ChangePopup\";\nimport \"../styles/MyProfile.css\";\n\nfunction AdminProfile() {\n  const { userData, setUserData } = useContext(GeneralData);\n  return (\n    <div className=\"wrapper\">\n      <div className=\"header\">\n        <h1>Zalogowany jako: {userData.stanowisko}</h1>\n      </div>\n      <div className=\"dashboard-wrapper\">\n        <div className=\"personal-data\">\n          <h3>Twoje dane:</h3>\n          <Pracownik pracownik={userData} />\n        </div>\n        <div className=\"dashboard\">\n          <h3>Panel sterowania:</h3>\n          <div className=\"change-event\">\n            <Link to=\"/participants\">\n              <h5>Zmiana danych / utworzenie wydarzenia / uczestnikow</h5>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Pracownik({ pracownik }) {\n  const dataUr = moment.utc(pracownik.data_urodzenia).format(\"L\");\n  const [tooglePopup, setTooglePopup] = useState(false);\n  return (\n    <div className=\"worker\">\n      <p>\n        {pracownik ? pracownik.imie : \"\"}\n        {pracownik ? \" \" + pracownik.nazwisko : \"\"}\n      </p>\n      <p>\n        {pracownik\n          ? \"Plec: \" + (pracownik.plec === \"K\" ? \"Kobieta\" : \"Mężczyzna\")\n          : \"\"}\n      </p>\n      <p>{pracownik ? \"Data ur.: \" + dataUr : \"\"}</p>\n      <p>{pracownik ? \"Pesel: \" + pracownik.pesel : \"Nima\"}</p>\n      <p>{pracownik ? \"Telefon: \" + pracownik.telefon : \"\"}</p>\n      <p>{pracownik ? \"Pensja: \" + pracownik.pensja : \"\"}</p>\n      <button\n        className=\"classic_button_style\"\n        onClick={() => {\n          setTooglePopup(true);\n        }}\n      >\n        Zmień dane\n      </button>\n      {tooglePopup && (\n        <ChangePopup\n          typ=\"pracownik\"\n          data={pracownik}\n          popupHandler={() => setTooglePopup(false)}\n          url={`/api/pracownicy?id=${pracownik.id}`}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default AdminProfile;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/DeveloperProfile.js",["127"],"import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GeneralData } from \"../Context\";\nimport ChangePopup from \"../helpers/ChangePopup\";\nimport moment from \"moment\";\nimport \"../styles/MyProfile.css\";\n\nfunction DeveloperProfile() {\n  const { userData, setUserData } = useContext(GeneralData);\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"header\">\n        <h1>Zalogowany jako: {userData.stanowisko}</h1>\n      </div>\n      <div className=\"dashboard-wrapper\">\n        <div className=\"personal-data\">\n          <h3>Twoje dane:</h3>\n          <Pracownik pracownik={userData} />\n        </div>\n        <div className=\"dashboard\">\n          <h3>Panel sterowania:</h3>\n          <div className=\"change-worker\">\n            <Link to=\"/employees\">\n              <h5>Zmiana danych pracownika</h5>\n            </Link>\n          </div>\n          <div className=\"change-event\">\n            <Link to=\"/participants\">\n              <h5>Zmiana danych / utworzenie wydarzenia</h5>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Pracownik({ pracownik }) {\n  const dataUr = moment.utc(pracownik.data_urodzenia).format(\"L\");\n  const [tooglePopup, setTooglePopup] = useState(false);\n  return (\n    <div className=\"worker\">\n      <p>\n        {pracownik ? pracownik.imie : \"\"}\n        {pracownik ? \" \" + pracownik.nazwisko : \"\"}\n      </p>\n      <p>\n        {pracownik\n          ? \"Plec: \" + (pracownik.plec === \"K\" ? \"Kobieta\" : \"Mężczyzna\")\n          : \"\"}\n      </p>\n      <p>{pracownik ? \"Data ur.: \" + dataUr : \"\"}</p>\n      <p>{pracownik ? \"Pesel: \" + pracownik.pesel : \"Nima\"}</p>\n      <p>{pracownik ? \"Telefon: \" + pracownik.telefon : \"\"}</p>\n      <p>{pracownik ? \"Pensja: \" + pracownik.pensja : \"\"}</p>\n      <button\n        className=\"classic_button_style\"\n        onClick={() => {\n          setTooglePopup(true);\n        }}\n      >\n        Zmień dane\n      </button>\n      {tooglePopup && (\n        <ChangePopup\n          typ=\"pracownik\"\n          data={pracownik}\n          popupHandler={() => setTooglePopup(false)}\n          url={`/api/pracownicy?id=${pracownik.id}`}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default DeveloperProfile;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/OrganizatorProfile.js",["128","129"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GeneralData } from \"../Context\";\nimport moment from \"moment\";\nimport ChangePopup from \"../helpers/ChangePopup\";\nimport \"../styles/MyProfile.css\";\n\nfunction OrganizatorProfile() {\n  const { userData, setUserData } = useContext(GeneralData);\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"header\">\n        <h1>Zalogowany jako: {userData.stanowisko}</h1>\n      </div>\n      <div className=\"dashboard-wrapper\">\n        <div className=\"personal-data\">\n          <h3>Twoje dane:</h3>\n          <Pracownik pracownik={userData} />\n        </div>\n        <div className=\"dashboard\">\n          <h3>Panel sterowania:</h3>\n          <div className=\"change-event\">\n            <Link to=\"/participants\">\n              <h5>Organizowywane przeze mnie wydarzenia</h5>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Pracownik({ pracownik }) {\n  const dataUr = moment.utc(pracownik.data_urodzenia).format(\"L\");\n  const [tooglePopup, setTooglePopup] = useState(false);\n  return (\n    <div className=\"worker\">\n      <p>\n        {pracownik ? pracownik.imie : \"\"}\n        {pracownik ? \" \" + pracownik.nazwisko : \"\"}\n      </p>\n      <p>\n        {pracownik\n          ? \"Plec: \" + (pracownik.plec === \"K\" ? \"Kobieta\" : \"Mężczyzna\")\n          : \"\"}\n      </p>\n      <p>{pracownik ? \"Data ur.: \" + dataUr : \"\"}</p>\n      <p>{pracownik ? \"Pesel: \" + pracownik.pesel : \"Nima\"}</p>\n      <p>{pracownik ? \"Telefon: \" + pracownik.telefon : \"\"}</p>\n      <p>{pracownik ? \"Pensja: \" + pracownik.pensja : \"\"}</p>\n      <button\n        className=\"classic_button_style\"\n        onClick={() => {\n          setTooglePopup(true);\n        }}\n      >\n        Zmień dane\n      </button>\n      {tooglePopup && (\n        <ChangePopup\n          typ=\"pracownik\"\n          data={pracownik}\n          popupHandler={() => setTooglePopup(false)}\n          url={`/api/pracownicy?id=${pracownik.id}`}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default OrganizatorProfile;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/helpers/LoginInput.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/helpers/ChangePopup.js",["130"],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/helpers/AddEvent.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/ParticipantProfile.js",["131","132"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { GeneralData } from \"../Context\";\nimport { Refetch } from \"../Context\";\nimport ChangePopup from \"../helpers/ChangePopup\";\nimport \"../styles/MyProfile.css\";\nimport Loader from \"react-loader-spinner\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nfunction ParticipantProfile() {\n  const { userData } = useContext(GeneralData);\n  const { refetch, setRefetch } = useContext(Refetch);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [eventChanged, setEventChanged] = useState(false);\n  const [allInfo, setAllInfo] = useState({});\n\n  useEffect(() => {\n    console.log(allInfo);\n  }, [allInfo]);\n\n  useEffect(() => {\n    async function serve() {\n      const servePart = await serveParticipants();\n      Promise.all([servePart]).then(() => {\n        setDataLoaded(true);\n        setEventChanged(false);\n      });\n    }\n    serve();\n    console.log(\"fetching for new data\");\n  }, [refetch, eventChanged]);\n\n  const serveParticipants = async () => {\n    let res = {\n      wystawa: [],\n      warsztat: [],\n    };\n\n    const wystawyIWarsztatyUczestnika = await axios(\n      \"/api/wydarzenia_uczestnika/\" + userData.id\n    );\n    const wystawy = await axios(\"/api/wystawy\");\n    const warsztaty = await axios(\"/api/warsztaty\");\n    Promise.all([wystawy, warsztaty])\n      .then(() => {\n        res.wystawa = [\n          ...wystawy.data.filter(\n            (wystawa) =>\n              wystawyIWarsztatyUczestnika.data\n                .filter((w) => w.typ === \"wystawa\")\n                .map((w) => w.id)\n                .indexOf(wystawa.id) !== -1\n          ),\n        ];\n        res.warsztat = [\n          ...warsztaty.data.filter(\n            (warsztat) =>\n              wystawyIWarsztatyUczestnika.data\n                .filter((w) => w.typ === \"warsztat\")\n                .map((w) => w.id)\n                .indexOf(warsztat.id) !== -1\n          ),\n        ];\n        setAllInfo(res);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"header\">\n        <h1>Zalogowany jako: {userData.stanowisko}</h1>\n      </div>\n      <div className=\"dashboard\">\n        <div\n          className=\"personal-data\"\n          style={{ width: \"700px\", marginBottom: \"5rem\" }}\n        >\n          <h3>Twoje dane:</h3>\n          <Uczestnik uczestnik={userData} />\n        </div>\n        <div className=\"event-data-participant\">\n          <h3>Jesteś zapisany na wydarzenia:</h3>\n          <div className=\"wydarzenia\" style={{ width: \"700px\" }}>\n            {dataLoaded && allInfo ? (\n              Object.keys(allInfo).map((key) => (\n                <div className=\"event_group\" key={key}>\n                  <h4>{`Rodzaj: ${key}`} </h4>\n                  <ul>\n                    {allInfo[key].length !== 0 ? (\n                      allInfo[key].map((event, i) => {\n                        return (\n                          <WydarzanieCard\n                            event={event}\n                            key={event.id}\n                            setEventChanged={setEventChanged}\n                          />\n                        );\n                      })\n                    ) : (\n                      <p>\n                        Nie jesteś zapisany na żadne wydarzenie tego rodzaju\n                      </p>\n                    )}\n                  </ul>\n                </div>\n              ))\n            ) : (\n              <div className=\"loader\">\n                <Loader type=\"ThreeDots\" color=\"#2196f3\" />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction WydarzanieCard({ event, setEventChanged }) {\n  const { userData } = useContext(GeneralData);\n  let data = moment.utc(event.data).local(\"pl\").format(\"LL\");\n  let godzina = moment.utc(event.data).format(\"HH:mm\");\n\n  const unsign = async () => {\n    console.log(\"unsign\");\n    const url = \"/api/wydarzenia_uczestnika\";\n    const params = {\n      id_uczestnika: userData.id,\n      id_wydarzenia: event.id,\n    };\n    console.log(params);\n    await axios.delete(url, {\n      data: Object.assign({}, params),\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    setEventChanged(true);\n  };\n\n  return (\n    <div className=\"event\">\n      {console.log()}\n      <div className=\"basic_info\">\n        <div className=\"info\">\n          <h3>{event ? event.temat : \"\"}</h3>\n          <p>\n            {event.imie_wystawiajacego\n              ? `${event.imie_wystawiajacego} ${event.nazwisko_wystawiajacego}`\n              : `${event.imie_wykladowcy} ${event.nazwisko_wykladowcy}`}\n          </p>\n          <p className=\"sala\">{`Numer sali: ${event.numer_sali}`}</p>\n        </div>\n\n        <div className=\"date\">\n          <p>{data}</p>\n          <p>{godzina+\" - \"+((parseInt(godzina.toString().substring(0,2))+event.czas_trwania)>23 ? (parseInt(godzina.toString().substring(0,2))+event.czas_trwania) - 24 : (parseInt(godzina.toString().substring(0,2))+event.czas_trwania) )+godzina.toString().substring(2,5)}</p>\n        </div>\n      </div>\n      <div className=\"buttons-wystawa\" style={{'margin': '0 0 0 auto', 'width': '8.5rem'}}>\n        <button\n          className=\"popup_submit classic_button_style red\"\n          onClick={unsign}\n        >\n          Wypisz się\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction Uczestnik({ uczestnik }) {\n  const [tooglePopup, setTooglePopup] = useState(false);\n\n  return (\n    <div className=\"worker\">\n      <p>\n        {uczestnik ? uczestnik.imie : \"\"}\n        {uczestnik ? \" \" + uczestnik.nazwisko : \"\"}\n      </p>\n      <p>{uczestnik ? \"Email: \" + uczestnik.email : \"\"}</p>\n      <p>{uczestnik ? \"Telefon: \" + uczestnik.telefon : \"\"}</p>\n      <button\n        className=\"classic_button_style\"\n        onClick={() => {\n          setTooglePopup(true);\n        }}\n      >\n        Zmień dane\n      </button>\n      {tooglePopup && (\n        <ChangePopup\n          typ=\"uczestnik\"\n          data={uczestnik}\n          popupHandler={() => setTooglePopup(false)}\n          url={`/api/uczestnicy?id=${uczestnik.id}`}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ParticipantProfile;\n",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":20,"column":6,"nodeType":"139","endLine":20,"endColumn":16,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":34,"column":6,"nodeType":"139","endLine":34,"endColumn":26,"suggestions":"142"},{"ruleId":"137","severity":1,"message":"141","line":33,"column":6,"nodeType":"139","endLine":33,"endColumn":24,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":10,"column":21,"nodeType":"146","messageId":"147","endLine":10,"endColumn":32},{"ruleId":"144","severity":1,"message":"148","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":14},{"ruleId":"144","severity":1,"message":"149","line":10,"column":11,"nodeType":"146","messageId":"147","endLine":10,"endColumn":19},{"ruleId":"137","severity":1,"message":"150","line":19,"column":6,"nodeType":"139","endLine":19,"endColumn":16,"suggestions":"151"},{"ruleId":"144","severity":1,"message":"152","line":14,"column":20,"nodeType":"146","messageId":"147","endLine":14,"endColumn":30},{"ruleId":"144","severity":1,"message":"153","line":14,"column":10,"nodeType":"146","messageId":"147","endLine":14,"endColumn":22},{"ruleId":"144","severity":1,"message":"154","line":15,"column":10,"nodeType":"146","messageId":"147","endLine":15,"endColumn":25},{"ruleId":"144","severity":1,"message":"155","line":16,"column":10,"nodeType":"146","messageId":"147","endLine":16,"endColumn":19},{"ruleId":"137","severity":1,"message":"150","line":25,"column":6,"nodeType":"139","endLine":25,"endColumn":16,"suggestions":"156"},{"ruleId":"144","severity":1,"message":"152","line":16,"column":20,"nodeType":"146","messageId":"147","endLine":16,"endColumn":30},{"ruleId":"144","severity":1,"message":"157","line":18,"column":10,"nodeType":"146","messageId":"147","endLine":18,"endColumn":21},{"ruleId":"158","severity":1,"message":"159","line":41,"column":37,"nodeType":"160","messageId":"161","endLine":41,"endColumn":39},{"ruleId":"158","severity":1,"message":"162","line":43,"column":9,"nodeType":"163","messageId":"164","endLine":43,"endColumn":16},{"ruleId":"158","severity":1,"message":"162","line":45,"column":22,"nodeType":"160","messageId":"165","endLine":45,"endColumn":24},{"ruleId":"158","severity":1,"message":"162","line":87,"column":45,"nodeType":"160","messageId":"165","endLine":87,"endColumn":47},{"ruleId":"158","severity":1,"message":"166","line":95,"column":13,"nodeType":"163","messageId":"164","endLine":95,"endColumn":20},{"ruleId":"137","severity":1,"message":"167","line":121,"column":6,"nodeType":"139","endLine":121,"endColumn":15,"suggestions":"168"},{"ruleId":"144","severity":1,"message":"169","line":196,"column":7,"nodeType":"146","messageId":"147","endLine":196,"endColumn":13},{"ruleId":"144","severity":1,"message":"170","line":226,"column":17,"nodeType":"146","messageId":"147","endLine":226,"endColumn":25},{"ruleId":"144","severity":1,"message":"145","line":9,"column":21,"nodeType":"146","messageId":"147","endLine":9,"endColumn":32},{"ruleId":"144","severity":1,"message":"145","line":9,"column":21,"nodeType":"146","messageId":"147","endLine":9,"endColumn":32},{"ruleId":"144","severity":1,"message":"171","line":1,"column":39,"nodeType":"146","messageId":"147","endLine":1,"endColumn":48},{"ruleId":"144","severity":1,"message":"145","line":9,"column":21,"nodeType":"146","messageId":"147","endLine":9,"endColumn":32},{"ruleId":"137","severity":1,"message":"172","line":44,"column":6,"nodeType":"139","endLine":44,"endColumn":8,"suggestions":"173"},{"ruleId":"144","severity":1,"message":"152","line":12,"column":20,"nodeType":"146","messageId":"147","endLine":12,"endColumn":30},{"ruleId":"137","severity":1,"message":"174","line":31,"column":6,"nodeType":"139","endLine":31,"endColumn":29,"suggestions":"175"},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoggedOut'. Either include it or remove the dependency array.","ArrayExpression",["178"],"React Hook useEffect has missing dependencies: 'userData.id' and 'userData.stanowisko'. Either include them or remove the dependency array.",["179"],["180"],"no-unused-vars","'setUserData' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'userData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'setUserData'. Either include them or remove the dependency array.",["181"],"'setRefetch' is assigned a value but never used.","'employeeForm' is assigned a value but never used.","'participantForm' is assigned a value but never used.","'errorHere' is assigned a value but never used.",["182"],"'domyKultury' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","expectedInside","Array.prototype.filter() expects a return value from arrow function.","React Hook useEffect has missing dependencies: 'serveParticipants' and 'userData'. Either include them or remove the dependency array.",["183"],"'change' is assigned a value but never used.","'setHaveP' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'typ'. Either include it or remove the dependency array.",["184"],"React Hook useEffect has a missing dependency: 'serveParticipants'. Either include it or remove the dependency array.",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"192","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [isLoggedOut, userData]",{"range":"201","text":"202"},"Update the dependencies array to be: [isWarsztatyChanged, userData.id, userData.stanowisko]",{"range":"203","text":"204"},"Update the dependencies array to be: [isWystawyChanged, userData.id, userData.stanowisko]",{"range":"205","text":"206"},"Update the dependencies array to be: [history, setUserData, userInfo]",{"range":"207","text":"208"},{"range":"209","text":"208"},"Update the dependencies array to be: [refetch, serveParticipants, userData]",{"range":"210","text":"211"},"Update the dependencies array to be: [typ]",{"range":"212","text":"213"},"Update the dependencies array to be: [refetch, eventChanged, serveParticipants]",{"range":"214","text":"215"},[603,613],"[isLoggedOut, userData]",[1157,1177],"[isWarsztatyChanged, userData.id, userData.stanowisko]",[1106,1124],"[isWystawyChanged, userData.id, userData.stanowisko]",[605,615],"[history, setUserData, userInfo]",[778,788],[3574,3583],"[refetch, serveParticipants, userData]",[1308,1310],"[typ]",[969,992],"[refetch, eventChanged, serveParticipants]"]