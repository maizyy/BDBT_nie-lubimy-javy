[{"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/index.js":"1","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/reportWebVitals.js":"2","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/App.js":"3","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/BasicPage.js":"4","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Navbar.js":"5","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/Context.js":"6","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Events.js":"7","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Lessons.js":"8","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Exhibitions.js":"9","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Home.js":"10","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/MyProfile.js":"11","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Register.js":"12","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Employees.js":"13","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Login.js":"14","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Participants.js":"15","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/AdminProfile.js":"16","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/DeveloperProfile.js":"17","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/OrganizatorProfile.js":"18","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/helpers/LoginInput.js":"19","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/helpers/ChangePopup.js":"20","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/helpers/AddEvent.js":"21","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/ParticipantProfile.js":"22"},{"size":500,"mtime":1609880214384,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1609880214387,"results":"25","hashOfConfig":"24"},{"size":779,"mtime":1610205574754,"results":"26","hashOfConfig":"24"},{"size":1088,"mtime":1609880338462,"results":"27","hashOfConfig":"24"},{"size":2159,"mtime":1610832046413,"results":"28","hashOfConfig":"24"},{"size":124,"mtime":1610205574755,"results":"29","hashOfConfig":"24"},{"size":3154,"mtime":1610800566908,"results":"30","hashOfConfig":"24"},{"size":5622,"mtime":1610836887435,"results":"31","hashOfConfig":"24"},{"size":6143,"mtime":1610836805418,"results":"32","hashOfConfig":"24"},{"size":2201,"mtime":1609880338474,"results":"33","hashOfConfig":"24"},{"size":1053,"mtime":1610831043580,"results":"34","hashOfConfig":"24"},{"size":1535,"mtime":1609880338481,"results":"35","hashOfConfig":"24"},{"size":4764,"mtime":1610783410011,"results":"36","hashOfConfig":"24"},{"size":4470,"mtime":1610832118085,"results":"37","hashOfConfig":"24"},{"size":8231,"mtime":1610835599713,"results":"38","hashOfConfig":"24"},{"size":2092,"mtime":1610792429533,"results":"39","hashOfConfig":"24"},{"size":2249,"mtime":1610786711649,"results":"40","hashOfConfig":"24"},{"size":2102,"mtime":1610795937732,"results":"41","hashOfConfig":"24"},{"size":471,"mtime":1609880338482,"results":"42","hashOfConfig":"24"},{"size":8324,"mtime":1610831656189,"results":"43","hashOfConfig":"24"},{"size":6747,"mtime":1610783410012,"results":"44","hashOfConfig":"24"},{"size":4441,"mtime":1610835587772,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1raqkty",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/index.js",[],["97","98"],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/reportWebVitals.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/App.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/BasicPage.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Navbar.js",["99"],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/Context.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Events.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Lessons.js",["100"],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Exhibitions.js",["101"],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Home.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/MyProfile.js",["102"],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Register.js",["103","104"],"import React from \"react\";\nimport LoginInput from \"../helpers/LoginInput\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nfunction Register() {\n  const history = useHistory();\n  const [registerInfo, setRegisterInfo] = useState({});\n  const login = async (e) => {\n    e.preventDefault();\n    // try {\n    //   const res = await axios.post(\"/api/login_pracownicy\", o);\n\n    //   setUserInfo(res.data[0]);\n    // } catch (error) {\n    //   console.log(error);\n    // }\n    history.push(\"/login\");\n  };\n  const change = (e, setter) => {\n    let { name, value } = e.target;\n    setter((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  return (\n    <div className=\"wrapper\">\n      <h1>Rejestraja uczestnika:</h1>\n      <form onSubmit={login}>\n        <div className=\"form-group\">\n          <LoginInput\n            text=\"Email\"\n            type=\"email\"\n            name=\"email\"\n            setter={(e) => change(e, setRegisterInfo)}\n          />\n          <LoginInput\n            text=\"Hasło\"\n            type=\"password\"\n            name=\"haslo\"\n            setter={(e) => change(e, setRegisterInfo)}\n          />\n          <LoginInput\n            text=\"Powtórz hasło\"\n            type=\"password\"\n            name=\"powtorzhaslo\"\n            setter={(e) => change(e, setRegisterInfo)}\n          />\n        </div>\n\n        <button className=\"submit-button\" type=\"submit\">\n          Zarejestruj się\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Employees.js",["105"],"import React, { useState, useEffect, useContext } from \"react\";\n//import { GeneralData } from \"../Context\";\nimport axios from \"axios\";\nimport \"../styles/Events.css\";\nimport moment from \"moment\";\nimport ChangePopup from \"../helpers/ChangePopup\";\nimport { Refetch } from \"../Context\";\n\nfunction Employees() {\n  //const { userData } = useContext(GeneralData);\n  const [selectedDomKultury, setSelectedDomKultury] = useState(1);\n  const [domyKultury, setDomyKultury] = useState([]);\n  const [pracownicy, setPracownicy] = useState([]);\n  const { refetch, setRefetch } = useContext(Refetch);\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\"/api/domy_kultury/\");\n      setDomyKultury(result.data);\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\n        \"/api/pracownicy?dom_kultury=\" + selectedDomKultury\n      );\n      setPracownicy(result.data);\n    }\n    fetchData();\n    console.log(\"refetch\");\n  }, [selectedDomKultury, refetch]);\n\n  const serveWorkerList = (workersList, workerPosition) => {\n    let workers = workersList.filter((worker) => {\n      return worker.stanowisko === workerPosition;\n    });\n    return workers.map((element, index) => {\n      return <Pracownik pracownik={element} key={index} index={index} />;\n    });\n  };\n\n  return (\n    <div className=\"box\">\n      <div className=\"container\">\n        <div className=\"container-left\">\n          <h2>Wybierz Dom Kultury:</h2>\n          <select\n            name=\"domKultury\"\n            onChange={(event) =>\n              setSelectedDomKultury(parseInt(event.target.value))\n            }\n          >\n            {domyKultury.map((element, index) => (\n              <option key={index} value={element.id}>\n                Dom Kultury numer {element.id}\n              </option>\n            ))}\n          </select>\n          <DomKultury domKultury={domyKultury[selectedDomKultury - 1]} />\n        </div>\n        <div className=\"container-right\">\n          <h2>Pracownicy w domie Kultury numer {selectedDomKultury}:</h2>\n          {/* <button className=\"classic_button_style\">Dodaj Pracownika</button> */}\n          <div className=\"workers_group\">\n            {pracownicy.length !== 0 ? (\n              <>\n                <div className=\"workers_wrapper\">\n                  <h3>Developerzy:</h3>\n                  <div className=\"participant_group\">\n                    {serveWorkerList(pracownicy, \"Developer\")}\n                  </div>\n                </div>\n                <div className=\"workers_wrapper\">\n                  <h3>Organizatorzy:</h3>\n                  {serveWorkerList(pracownicy, \"Organizator\")}\n                </div>\n                <div className=\"workers_wrapper\">\n                  <h3>Developerzy:</h3>\n                  {serveWorkerList(pracownicy, \"Administrator\")}\n                </div>\n              </>\n            ) : (\n              <h4>Niestety nie znalezlismy zadnych pracownikow</h4>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction DomKultury({ domKultury }) {\n  return (\n    <div>\n      <h5>{domKultury ? \"City: \" + domKultury.city : \"\"}</h5>\n      <h5>\n        {domKultury\n          ? \"Street: \" + domKultury.street + \"/\" + domKultury.apartment\n          : \"\"}\n      </h5>\n      <h5>{domKultury ? \"Postal code: \" + domKultury.postal_code : \"\"}</h5>\n      <h5>{domKultury ? \"Phone: \" + domKultury.phone : \"\"}</h5>\n      <h5>{domKultury ? \"Opens: \" + domKultury.opens.slice(11, 16) : \"\"}</h5>\n      <h5>{domKultury ? \"Closes: \" + domKultury.closes.slice(11, 16) : \"\"}</h5>\n    </div>\n  );\n}\n\nfunction Pracownik({ pracownik }) {\n  const dataUr = moment.utc(pracownik.data_urodzenia).format(\"L\");\n  const [tooglePopup, setTooglePopup] = useState(false);\n  return (\n    <div className=\"worker\">\n      <p>\n        {pracownik ? pracownik.imie : \"\"}\n        {pracownik ? \" \" + pracownik.nazwisko : \"\"}\n      </p>\n      <p>\n        {pracownik\n          ? \"Plec: \" + (pracownik.plec === \"K\" ? \"Kobieta\" : \"Mężczyzna\")\n          : \"\"}\n      </p>\n      <p>{pracownik ? \"Data ur.: \" + dataUr : \"\"}</p>\n      <p>{pracownik ? \"Pesel: \" + pracownik.pesel : \"Nima\"}</p>\n      <p>{pracownik ? \"Telefon: \" + pracownik.telefon : \"\"}</p>\n      <p>{pracownik ? \"Pensja: \" + pracownik.pensja : \"\"}</p>\n      <button\n        className=\"classic_button_style\"\n        onClick={() => {\n          setTooglePopup(true);\n        }}\n      >\n        Zmień dane\n      </button>\n      {tooglePopup && (\n        <ChangePopup\n          typ=\"pracownik\"\n          data={pracownik}\n          popupHandler={() => setTooglePopup(false)}\n          url={`/api/pracownicy?id=${pracownik.id}`}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Employees;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Login.js",["106","107","108","109"],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/Participants.js",["110","111","112","113","114","115","116","117","118","119"],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/AdminProfile.js",["120"],"import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GeneralData } from \"../Context\";\nimport moment from \"moment\";\nimport ChangePopup from \"../helpers/ChangePopup\";\nimport \"../styles/MyProfile.css\";\n\nfunction AdminProfile() {\n  const { userData, setUserData } = useContext(GeneralData);\n  return (\n    <div className=\"wrapper\">\n      <div className=\"header\">\n        <h1>Zalogowany jako: {userData.stanowisko}</h1>\n      </div>\n      <div className=\"dashboard-wrapper\">\n        <div className=\"personal-data\">\n          <h3>Twoje dane:</h3>\n          <Pracownik pracownik={userData} />\n        </div>\n        <div className=\"dashboard\">\n          <h3>Panel sterowania:</h3>\n          <div className=\"change-event\">\n            <Link to=\"/participants\">\n              <h5>Zmiana danych / utworzenie wydarzenia / uczestnikow</h5>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Pracownik({ pracownik }) {\n  const dataUr = moment.utc(pracownik.data_urodzenia).format(\"L\");\n  const [tooglePopup, setTooglePopup] = useState(false);\n  return (\n    <div className=\"worker\">\n      <p>\n        {pracownik ? pracownik.imie : \"\"}\n        {pracownik ? \" \" + pracownik.nazwisko : \"\"}\n      </p>\n      <p>\n        {pracownik\n          ? \"Plec: \" + (pracownik.plec === \"K\" ? \"Kobieta\" : \"Mężczyzna\")\n          : \"\"}\n      </p>\n      <p>{pracownik ? \"Data ur.: \" + dataUr : \"\"}</p>\n      <p>{pracownik ? \"Pesel: \" + pracownik.pesel : \"Nima\"}</p>\n      <p>{pracownik ? \"Telefon: \" + pracownik.telefon : \"\"}</p>\n      <p>{pracownik ? \"Pensja: \" + pracownik.pensja : \"\"}</p>\n      <button\n        className=\"classic_button_style\"\n        onClick={() => {\n          setTooglePopup(true);\n        }}\n      >\n        Zmień dane\n      </button>\n      {tooglePopup && (\n        <ChangePopup\n          typ=\"pracownik\"\n          data={pracownik}\n          popupHandler={() => setTooglePopup(false)}\n          url={`/api/pracownicy?id=${pracownik.id}`}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default AdminProfile;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/DeveloperProfile.js",["121"],"import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GeneralData } from \"../Context\";\nimport ChangePopup from \"../helpers/ChangePopup\";\nimport moment from \"moment\";\nimport \"../styles/MyProfile.css\";\n\nfunction DeveloperProfile() {\n  const { userData, setUserData } = useContext(GeneralData);\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"header\">\n        <h1>Zalogowany jako: {userData.stanowisko}</h1>\n      </div>\n      <div className=\"dashboard-wrapper\">\n        <div className=\"personal-data\">\n          <h3>Twoje dane:</h3>\n          <Pracownik pracownik={userData} />\n        </div>\n        <div className=\"dashboard\">\n          <h3>Panel sterowania:</h3>\n          <div className=\"change-worker\">\n            <Link to=\"/employees\">\n              <h5>Zmiana danych pracownika</h5>\n            </Link>\n          </div>\n          <div className=\"change-event\">\n            <Link to=\"/participants\">\n              <h5>Zmiana danych / utworzenie wydarzenia</h5>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Pracownik({ pracownik }) {\n  const dataUr = moment.utc(pracownik.data_urodzenia).format(\"L\");\n  const [tooglePopup, setTooglePopup] = useState(false);\n  return (\n    <div className=\"worker\">\n      <p>\n        {pracownik ? pracownik.imie : \"\"}\n        {pracownik ? \" \" + pracownik.nazwisko : \"\"}\n      </p>\n      <p>\n        {pracownik\n          ? \"Plec: \" + (pracownik.plec === \"K\" ? \"Kobieta\" : \"Mężczyzna\")\n          : \"\"}\n      </p>\n      <p>{pracownik ? \"Data ur.: \" + dataUr : \"\"}</p>\n      <p>{pracownik ? \"Pesel: \" + pracownik.pesel : \"Nima\"}</p>\n      <p>{pracownik ? \"Telefon: \" + pracownik.telefon : \"\"}</p>\n      <p>{pracownik ? \"Pensja: \" + pracownik.pensja : \"\"}</p>\n      <button\n        className=\"classic_button_style\"\n        onClick={() => {\n          setTooglePopup(true);\n        }}\n      >\n        Zmień dane\n      </button>\n      {tooglePopup && (\n        <ChangePopup\n          typ=\"pracownik\"\n          data={pracownik}\n          popupHandler={() => setTooglePopup(false)}\n          url={`/api/pracownicy?id=${pracownik.id}`}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default DeveloperProfile;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/OrganizatorProfile.js",["122","123"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GeneralData } from \"../Context\";\nimport moment from \"moment\";\nimport ChangePopup from \"../helpers/ChangePopup\";\nimport \"../styles/MyProfile.css\";\n\nfunction OrganizatorProfile() {\n  const { userData, setUserData } = useContext(GeneralData);\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"header\">\n        <h1>Zalogowany jako: {userData.stanowisko}</h1>\n      </div>\n      <div className=\"dashboard-wrapper\">\n        <div className=\"personal-data\">\n          <h3>Twoje dane:</h3>\n          <Pracownik pracownik={userData} />\n        </div>\n        <div className=\"dashboard\">\n          <h3>Panel sterowania:</h3>\n          <div className=\"change-event\">\n            <Link to=\"/participants\">\n              <h5>Organizowywane przeze mnie wydarzenia</h5>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Pracownik({ pracownik }) {\n  const dataUr = moment.utc(pracownik.data_urodzenia).format(\"L\");\n  const [tooglePopup, setTooglePopup] = useState(false);\n  return (\n    <div className=\"worker\">\n      <p>\n        {pracownik ? pracownik.imie : \"\"}\n        {pracownik ? \" \" + pracownik.nazwisko : \"\"}\n      </p>\n      <p>\n        {pracownik\n          ? \"Plec: \" + (pracownik.plec === \"K\" ? \"Kobieta\" : \"Mężczyzna\")\n          : \"\"}\n      </p>\n      <p>{pracownik ? \"Data ur.: \" + dataUr : \"\"}</p>\n      <p>{pracownik ? \"Pesel: \" + pracownik.pesel : \"Nima\"}</p>\n      <p>{pracownik ? \"Telefon: \" + pracownik.telefon : \"\"}</p>\n      <p>{pracownik ? \"Pensja: \" + pracownik.pensja : \"\"}</p>\n      <button\n        className=\"classic_button_style\"\n        onClick={() => {\n          setTooglePopup(true);\n        }}\n      >\n        Zmień dane\n      </button>\n      {tooglePopup && (\n        <ChangePopup\n          typ=\"pracownik\"\n          data={pracownik}\n          popupHandler={() => setTooglePopup(false)}\n          url={`/api/pracownicy?id=${pracownik.id}`}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default OrganizatorProfile;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/helpers/LoginInput.js",[],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/helpers/ChangePopup.js",["124"],"/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/helpers/AddEvent.js",["125"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { Refetch } from \"../Context\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nfunction AddEvent({ handleActive }) {\n  let initWarsztaty = {\n    imie_wykladowcy: \"\",\n    nazwisko_wykladowcy: \"\",\n    temat: \"\",\n    email_wykladowcy: \"\",\n    telefon: \"\",\n    data: \"\",\n    czas_trwania: null,\n    sala: \"\",\n    id_domu_kultury: null,\n    id_sali: null,\n  };\n  let initWystawy = {\n    imie_wystawiajacego: \"\",\n    nazwisko_wystawiajacego: \"\",\n    temat: \"\",\n    typ_wystawy: \"\",\n    data: \"\",\n    czas_trwania: null,\n    sala: \"\",\n    id_domu_kultury: null,\n    id_sali: null,\n    opis: \"\",\n  };\n  const { refetch, setRefetch } = useContext(Refetch);\n  const [warsztatyInputs, setWarsztatyInputs] = useState(initWarsztaty);\n  const [wystawyInputs, setWystawyInputs] = useState(initWystawy);\n  const [rooms, setRooms] = useState([]);\n  const [eventType, setEventType] = useState(\"\");\n  const change = (e, setter) => {\n    let { name, value } = e.target;\n    if (name === \"data_urodzenia\" || name === \"data\") {\n      setter((prevState) => ({\n        ...prevState,\n        [name]: moment.utc(value).toISOString(),\n      }));\n    } else {\n      setter((prevState) => ({\n        ...prevState,\n        [name]: value,\n      }));\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      const res = await axios(\"/api/sale\");\n      setRooms(res.data);\n    }\n    fetchData();\n  }, []);\n  const infoAboutPosition = (position, arr) => {\n    const res = arr.filter((el) => {\n      return el.numer_sali == position;\n    });\n    return res[0];\n  };\n  const renderInputs = (key, setter) => {\n    switch (key) {\n      case \"sala\":\n        let sala;\n        if (eventType === \"warsztat\") {\n          sala = warsztatyInputs[key];\n        } else if (eventType === \"wystawa\") {\n          sala = wystawyInputs[key];\n        }\n        return (\n          <select\n            name={key}\n            value={sala}\n            onChange={(e) => {\n              change(e, setter);\n\n              setter((prevState) => ({\n                ...prevState,\n                id_sali: infoAboutPosition(e.target.value, rooms).id,\n              }));\n            }}\n          >\n            {rooms.map((room, i) => {\n              return (\n                <option key={i} value={room.numer_sali}>\n                  {room.numer_sali}\n                </option>\n              );\n            })}\n          </select>\n        );\n      case \"data\":\n        let data;\n        if (eventType === \"warsztat\") {\n          data = moment.utc(warsztatyInputs[key]).format(\"YYYY-MM-DDTHH:mm\");\n        } else if (eventType === \"wystawa\") {\n          data = moment.utc(wystawyInputs[key]).format(\"YYYY-MM-DDTHH:mm\");\n        }\n        return (\n          <input\n            type=\"datetime-local\"\n            name={key}\n            value={data}\n            onChange={(e) => {\n              change(e, setter);\n              console.log(e.target.value);\n            }}\n          />\n        );\n      case \"opis\":\n        return (\n          <textarea\n            name={key}\n            cols=\"10\"\n            rows=\"5\"\n            onChange={(e) => change(e, setter)}\n          ></textarea>\n        );\n      default:\n        return (\n          <input type=\"text\" name={key} onChange={(e) => change(e, setter)} />\n        );\n    }\n  };\n\n  const renderFormGroup = (key, setter) => {\n    switch (key) {\n      case \"id_sali\":\n        return;\n      default:\n        return (\n          <div className=\"change_group\">\n            {renderInputs(key, setter)}\n            <label htmlFor=\"key\">{key.replaceAll(/_/gi, \" \")}</label>\n          </div>\n        );\n    }\n  };\n  const handlePostEvent = async () => {\n    if (eventType === \"wystawa\") {\n      const params = {\n        imie_wystawiajacego: wystawyInputs.imie_wystawiajacego,\n        nazwisko_wystawiajacego: wystawyInputs.nazwisko_wystawiajacego,\n        temat: wystawyInputs.temat,\n        typ_wystawy: wystawyInputs.typ_wystawy,\n        opis: wystawyInputs.opis,\n        data: wystawyInputs.data,\n        czas_trwania: wystawyInputs.czas_trwania,\n        id_domu_kultury: wystawyInputs.id_domu_kultury,\n        id_sali: wystawyInputs.id_sali,\n      };\n\n      const res = await axios.post(\"/api/wystawy\", params);\n      console.log(res);\n    } else if (eventType === \"warsztat\") {\n      const params = {\n        imie_wykladowcy: warsztatyInputs.imie_wykladowcy,\n        nazwisko_wykladowcy: warsztatyInputs.nazwisko_wykladowcy,\n        temat: warsztatyInputs.temat,\n        email: warsztatyInputs.email_wykladowcy,\n        telefon: warsztatyInputs.telefon,\n        data: warsztatyInputs.data,\n        czas_trwania: warsztatyInputs.czas_trwania,\n        id_domu_kultury: warsztatyInputs.id_domu_kultury,\n        id_sali: warsztatyInputs.id_sali,\n      };\n      console.log(params);\n      const res = await axios.post(\"/api/warsztaty\", params);\n      console.log(res);\n    }\n\n    setRefetch(!refetch);\n    handleActive();\n  };\n\n  return (\n    <div className=\"popup\">\n      <div className=\"popup_wrapper\">\n        <button\n          className=\"close_popup las la-times\"\n          onClick={handleActive}\n        ></button>\n        <h2>Dodaj wydarzenie</h2>\n        <div className=\"user-type-radios\">\n          <label className=\"radio_button\">\n            <input\n              name=\"warsztat\"\n              type=\"radio\"\n              value=\"warsztat\"\n              checked={eventType === \"warsztat\"}\n              onChange={(e) => {\n                setEventType(e.target.value);\n                setWystawyInputs(initWystawy);\n              }}\n            />\n            <span className=\"checkmark\"></span>\n            Warsztat\n          </label>\n          <label className=\"radio_button\">\n            <input\n              name=\"wystawa\"\n              type=\"radio\"\n              value=\"wystawa\"\n              checked={eventType === \"wystawa\"}\n              onChange={(e) => {\n                setEventType(e.target.value);\n                setWarsztatyInputs(initWarsztaty);\n              }}\n            />\n            <span className=\"checkmark\"></span>\n            Wystawa\n          </label>\n        </div>\n        <div className=\"change_wrapper\">\n          {eventType === \"warsztat\" &&\n            Object.keys(warsztatyInputs).map((key) => {\n              return renderFormGroup(key, setWarsztatyInputs);\n            })}\n          {eventType === \"wystawa\" &&\n            Object.keys(wystawyInputs).map((key) => {\n              return renderFormGroup(key, setWystawyInputs);\n            })}\n        </div>\n        <button className=\"classic_button_style\" onClick={handlePostEvent}>\n          Dodaj wydarzenie\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default AddEvent;\n","/Users/levchenkosofiia/Documents/Git-local/BDBT/dom-kultury/src/components/ParticipantProfile.js",["126","127"],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":20,"column":6,"nodeType":"134","endLine":20,"endColumn":16,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":32,"column":6,"nodeType":"134","endLine":32,"endColumn":26,"suggestions":"137"},{"ruleId":"132","severity":1,"message":"136","line":33,"column":6,"nodeType":"134","endLine":33,"endColumn":24,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":10,"column":21,"nodeType":"141","messageId":"142","endLine":10,"endColumn":32},{"ruleId":"139","severity":1,"message":"143","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":14},{"ruleId":"139","severity":1,"message":"144","line":8,"column":10,"nodeType":"141","messageId":"142","endLine":8,"endColumn":22},{"ruleId":"139","severity":1,"message":"145","line":14,"column":20,"nodeType":"141","messageId":"142","endLine":14,"endColumn":30},{"ruleId":"139","severity":1,"message":"146","line":14,"column":10,"nodeType":"141","messageId":"142","endLine":14,"endColumn":22},{"ruleId":"139","severity":1,"message":"147","line":15,"column":10,"nodeType":"141","messageId":"142","endLine":15,"endColumn":25},{"ruleId":"139","severity":1,"message":"148","line":16,"column":10,"nodeType":"141","messageId":"142","endLine":16,"endColumn":19},{"ruleId":"132","severity":1,"message":"149","line":25,"column":6,"nodeType":"134","endLine":25,"endColumn":16,"suggestions":"150"},{"ruleId":"139","severity":1,"message":"145","line":16,"column":20,"nodeType":"141","messageId":"142","endLine":16,"endColumn":30},{"ruleId":"139","severity":1,"message":"151","line":18,"column":10,"nodeType":"141","messageId":"142","endLine":18,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":41,"column":37,"nodeType":"154","messageId":"155","endLine":41,"endColumn":39},{"ruleId":"152","severity":1,"message":"156","line":43,"column":9,"nodeType":"157","messageId":"158","endLine":43,"endColumn":16},{"ruleId":"152","severity":1,"message":"156","line":45,"column":22,"nodeType":"154","messageId":"159","endLine":45,"endColumn":24},{"ruleId":"152","severity":1,"message":"156","line":87,"column":45,"nodeType":"154","messageId":"159","endLine":87,"endColumn":47},{"ruleId":"152","severity":1,"message":"160","line":95,"column":13,"nodeType":"157","messageId":"158","endLine":95,"endColumn":20},{"ruleId":"132","severity":1,"message":"161","line":121,"column":6,"nodeType":"134","endLine":121,"endColumn":15,"suggestions":"162"},{"ruleId":"139","severity":1,"message":"163","line":196,"column":7,"nodeType":"141","messageId":"142","endLine":196,"endColumn":13},{"ruleId":"139","severity":1,"message":"164","line":226,"column":17,"nodeType":"141","messageId":"142","endLine":226,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":9,"column":21,"nodeType":"141","messageId":"142","endLine":9,"endColumn":32},{"ruleId":"139","severity":1,"message":"140","line":9,"column":21,"nodeType":"141","messageId":"142","endLine":9,"endColumn":32},{"ruleId":"139","severity":1,"message":"165","line":1,"column":39,"nodeType":"141","messageId":"142","endLine":1,"endColumn":48},{"ruleId":"139","severity":1,"message":"140","line":9,"column":21,"nodeType":"141","messageId":"142","endLine":9,"endColumn":32},{"ruleId":"132","severity":1,"message":"166","line":32,"column":6,"nodeType":"134","endLine":32,"endColumn":8,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":59,"column":28,"nodeType":"170","messageId":"171","endLine":59,"endColumn":30},{"ruleId":"139","severity":1,"message":"145","line":12,"column":20,"nodeType":"141","messageId":"142","endLine":12,"endColumn":30},{"ruleId":"132","severity":1,"message":"172","line":27,"column":6,"nodeType":"134","endLine":27,"endColumn":15,"suggestions":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoggedOut'. Either include it or remove the dependency array.","ArrayExpression",["176"],"React Hook useEffect has missing dependencies: 'userData.id' and 'userData.stanowisko'. Either include them or remove the dependency array.",["177"],["178"],"no-unused-vars","'setUserData' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'registerInfo' is assigned a value but never used.","'setRefetch' is assigned a value but never used.","'employeeForm' is assigned a value but never used.","'participantForm' is assigned a value but never used.","'errorHere' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'setUserData'. Either include them or remove the dependency array.",["179"],"'domyKultury' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","expectedInside","Array.prototype.filter() expects a return value from arrow function.","React Hook useEffect has missing dependencies: 'serveParticipants' and 'userData'. Either include them or remove the dependency array.",["180"],"'change' is assigned a value but never used.","'setHaveP' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'typ'. Either include it or remove the dependency array.",["181"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'serveParticipants'. Either include it or remove the dependency array.",["182"],"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [isLoggedOut, userData]",{"range":"197","text":"198"},"Update the dependencies array to be: [isWarsztatyChanged, userData.id, userData.stanowisko]",{"range":"199","text":"200"},"Update the dependencies array to be: [isWystawyChanged, userData.id, userData.stanowisko]",{"range":"201","text":"202"},"Update the dependencies array to be: [history, setUserData, userInfo]",{"range":"203","text":"204"},"Update the dependencies array to be: [refetch, serveParticipants, userData]",{"range":"205","text":"206"},"Update the dependencies array to be: [typ]",{"range":"207","text":"208"},"Update the dependencies array to be: [refetch, serveParticipants]",{"range":"209","text":"210"},[603,613],"[isLoggedOut, userData]",[1090,1110],"[isWarsztatyChanged, userData.id, userData.stanowisko]",[1111,1129],"[isWystawyChanged, userData.id, userData.stanowisko]",[778,788],"[history, setUserData, userInfo]",[3574,3583],"[refetch, serveParticipants, userData]",[976,978],"[typ]",[859,868],"[refetch, serveParticipants]"]